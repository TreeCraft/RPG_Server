# 匹配打开的界面名，若一致时会替换界面
match: "导航教学"
Functions:
  # 通过判断按键，异步执行下面的这个【延时关闭界面】，它会延时100毫秒后才关闭，延时的这段时间是用来做背包的关闭动画的
  # 判断的格式是  (条件)?{达成执行;}:{否则执行;};  如果没有否则执行  可以用0代替 写成 (条件)?{达成执行;}:0;
  # || 是或的意思，也就是说当 当前的按键为 E或ESC,就关闭界面   && 则是且的意思
  keyPress: "(方法.取当前按下键=='Y')?{方法.关闭界面;}:0"
背包背景_texture:
  # x和y指组件的显示位置，组件将会从x,y开始，绘制一个width,height的图形
  # w指屏幕宽度  h指屏幕高度, 通过这种 (屏幕宽度-组件宽度)/2 的格式来设定xy，可以让组件在屏幕处于居中的位置
  # 你也可以用  方法.取屏幕宽度  来获取屏幕宽度进行计算
  x: "0"
  y: "0"
  # 透明度, 界面的存活时间是打开界面后,由0不断递增的毫秒数,通过计算我们就可以获取一个由0.0一直增加到1.0的值
  # 当然由于透明度的区间为 0.00-1.00 所以这里即便它到达了2也是跟1一样的透明度
  # 图片显示的宽度
  width: "w"
  # 图片显示的高度
  height: "h"
  # 贴图的文件路径
  texture: "gui/基础教学/基础教学1.png"

tip1_texture:
  x: "w/10"
  y: "100"
  scale: 1.3
  height: "20"
  width: "260"
  center: true
  color: "0,255,0,255"
  text: 接到新的任务后，按出聊天输入框，用鼠标点击导航，即可触发导航！
  texture: "0,0,0,150"
tip2_texture:
  x: "w/10"
  y: "120"
  scale: 1.3
  height: "20"
  width: "260"
  center: true
  color: "0,255,0,255"
  text: 按下Y关闭此提示！
  texture: "0,0,0,150"